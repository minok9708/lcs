{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minok\\\\lcs\\\\src\\\\Map\\\\Map.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { NaverMap, Marker } from \"react-naver-maps\"; // 패키지 불러오기\n\nimport Search from \"../Components/Search\";\nimport \"./Map.css\";\nimport { findAllByPlaceholderText } from \"@testing-library/react\";\n\nclass Map extends React.Component {\n  // map = new naver.maps.Map('mapDiv', {option});\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      console.log(\"e.coord >>>\", e.coord);\n      this.setState({\n        input_latlng: e.coord + \"\"\n      });\n    };\n\n    this.handleToZoomLevelOne = e => {\n      this.setState({\n        zoom: 10\n      });\n    };\n\n    const navermaps = window.naver.maps;\n    this.state = {\n      map: navermaps,\n      input_latlng: \"\",\n      zoomControl: true,\n      zoom: 2,\n      mapTypeId: \"normal\",\n      center: navermaps.LatLng(36.480058, 127.289039),\n      // 126.9861108, 37.4983439 초기 지도 위치\n      zoomControlOptions: {\n        center: new navermaps.LatLng(36.480058, 127.289039),\n        //36.4203004, 128.317960\n        position: navermaps.Position.TOP_LEFT,\n        style: navermaps.ZoomControlStyle.SMALL\n      },\n      scaleControl: true,\n      draggable: true,\n      scrollWheel: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, place(), getLocation(), NaverMapAPI(), /*#__PURE__*/React.createElement(\"view\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      onCreate: this.handleCreate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nfunction place(props) {\n  parentCallback = dataFromChild => {};\n\n  return console.log(props.place);\n}\n\nplace.defaultProps = {\n  place: \"목적지 없음\"\n};\n\nfunction NaverMapAPI() {\n  const navermaps = window.naver.maps;\n  return /*#__PURE__*/React.createElement(NaverMap, {\n    mapDivId: \"maps-getting-started-uncontrolled\" // default: react-naver-map\n    ,\n    style: {\n      width: \"100%\",\n      // 네이버지도 가로 길이\n      height: \"922px\" // 네이버지도 세로 길이\n\n    },\n    defaultCenter: {\n      lat: 37.9036062,\n      lng: 127.0385797\n    } // 지도 초기 위치\n    ,\n    defaultZoom: 13 // 지도 초기 확대 배율\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    id: \"marker1\",\n    key: Marker.id,\n    position: new navermaps.LatLng(37.554722, 126.970833),\n    animation: 2\n    /* 마커 애니메이션설정 */\n    ,\n    onClick: () => {\n      alert(\"여기는 N서울타워입니다.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    id: \"marker2\",\n    key: Marker.id,\n    position: new navermaps.LatLng(37.5939431, 127.075976),\n    animation: 0\n    /* 마커 애니메이션설정 (0.1.2)*/\n    ,\n    onClick: () => {\n      alert(\"여기는 중랑역입니다.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    id: \"marker3\",\n    key: Marker.id,\n    position: new navermaps.LatLng(37.9036062, 127.0385797),\n    animation: 0\n    /* 마커 애니메이션설정 (0.1.2)*/\n    ,\n    onClick: () => {\n      alert(\"신한대학교입니다.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    id: \"marker4\",\n    key: Marker.id,\n    position: new navermaps.LatLng(37.6505726, 127.05075719999999),\n    animation: 0\n    /* 마커 애니메이션설정 (0.1.2)*/\n    ,\n    onClick: () => {\n      alert(\"영수오빠네입니다\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }));\n}\n/* gPS권한 허용/차단 \r\ngetCurrentPosition:현재위치 정보 가져옴\r\nlatitude:위도\r\nlongitude:경도 \r\n*/\n\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    // GPS를 지원하는 경우\n    navigator.geolocation.getCurrentPosition(function (position) {\n      alert(position.coords.latitude + \" \" + position.coords.longitude);\n      console.log(\"위도: \" + position.coords.latitude + \" \" + \"경도: \" + position.coords.longitude);\n      /* 알림으로 나타냄 */\n    }, function (error) {\n      //위치값 찾기 에러났을때\n      console.error(error);\n    }, {\n      //옵션\n      enableHighAccuracy: true,\n      //베터리를 소모해서 더 정확한 위치를 찾음\n      maximumAge: 0,\n      //한번찾은 위치정보를 해당 초만큼 캐싱\n      timeout: Infinity //주어진 초에 찾지못하면 에러발생\n\n    });\n  } else {\n    //GPS를 지원하지 않는 경우\n    alert(\"GPS를 지원하지 않습니다\");\n  }\n}\n\nexport default Map;","map":{"version":3,"sources":["C:/Users/minok/lcs/src/Map/Map.js"],"names":["React","Component","Fragment","NaverMap","Marker","Search","findAllByPlaceholderText","Map","constructor","props","handleClick","e","console","log","coord","setState","input_latlng","handleToZoomLevelOne","zoom","navermaps","window","naver","maps","state","map","zoomControl","mapTypeId","center","LatLng","zoomControlOptions","position","Position","TOP_LEFT","style","ZoomControlStyle","SMALL","scaleControl","draggable","scrollWheel","render","place","getLocation","NaverMapAPI","handleCreate","parentCallback","dataFromChild","defaultProps","width","height","lat","lng","id","alert","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","error","enableHighAccuracy","maximumAge","timeout","Infinity"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,EAAkBC,MAAlB,QAA+B,kBAA/B,C,CAAmD;;AACnD,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,WAAP;AACA,SAAQC,wBAAR,QAAuC,wBAAvC;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACC,SAAxB,CAAkC;AAChC;AACAO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,WAvBmB,GAuBJC,CAAD,IAAO;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,CAAC,CAACG,KAA7B;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAEL,CAAC,CAACG,KAAF,GAAU;AADZ,OAAd;AAGD,KA5BkB;;AAAA,SA8BnBG,oBA9BmB,GA8BKN,CAAD,IAAO;AAC5B,WAAKI,QAAL,CAAc;AACZG,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAlCkB;;AAEjB,UAAMC,SAAS,GAAGC,MAAM,CAACC,KAAP,CAAaC,IAA/B;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAEL,SADM;AAEXH,MAAAA,YAAY,EAAE,EAFH;AAGXS,MAAAA,WAAW,EAAE,IAHF;AAIXP,MAAAA,IAAI,EAAE,CAJK;AAKXQ,MAAAA,SAAS,EAAE,QALA;AAMXC,MAAAA,MAAM,EAAER,SAAS,CAACS,MAAV,CAAiB,SAAjB,EAA4B,UAA5B,CANG;AAMsC;AAEjDC,MAAAA,kBAAkB,EAAE;AAClBF,QAAAA,MAAM,EAAE,IAAIR,SAAS,CAACS,MAAd,CAAqB,SAArB,EAAgC,UAAhC,CADU;AACmC;AACrDE,QAAAA,QAAQ,EAAEX,SAAS,CAACY,QAAV,CAAmBC,QAFX;AAGlBC,QAAAA,KAAK,EAAEd,SAAS,CAACe,gBAAV,CAA2BC;AAHhB,OART;AAcXC,MAAAA,YAAY,EAAE,IAdH;AAeXC,MAAAA,SAAS,EAAE,IAfA;AAgBXC,MAAAA,WAAW,EAAE;AAhBF,KAAb;AAkBD;;AAcDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KAAK,EADR,EAEGC,WAAW,EAFd,EAGGC,WAAW,EAHd,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,CADF,CAJF,CADF;AAUD;;AAjD+B;;AAoDlC,SAASH,KAAT,CAAe/B,KAAf,EAAsB;AACpBmC,EAAAA,cAAc,GAAGC,aAAD,IAAiB,CAEhC,CAFD;;AAGA,SAAOjC,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAAC+B,KAAlB,CAAP;AACD;;AAEDA,KAAK,CAACM,YAAN,GAAqB;AACnBN,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,SAASE,WAAT,GAAuB;AACrB,QAAMvB,SAAS,GAAGC,MAAM,CAACC,KAAP,CAAaC,IAA/B;AACA,sBACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE,mCADZ,CACiD;AADjD;AAEE,IAAA,KAAK,EAAE;AACLyB,MAAAA,KAAK,EAAE,MADF;AACU;AACfC,MAAAA,MAAM,EAAE,OAFH,CAEY;;AAFZ,KAFT;AAME,IAAA,aAAa,EAAE;AAACC,MAAAA,GAAG,EAAE,UAAN;AAAkBC,MAAAA,GAAG,EAAE;AAAvB,KANjB,CAMsD;AANtD;AAOE,IAAA,WAAW,EAAE,EAPf,CAOmB;AAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,GAAG,EAAE9C,MAAM,CAAC+C,EAFd;AAGE,IAAA,QAAQ,EAAE,IAAIhC,SAAS,CAACS,MAAd,CAAqB,SAArB,EAAgC,UAAhC,CAHZ;AAIE,IAAA,SAAS,EAAE;AAAG;AAJhB;AAKE,IAAA,OAAO,EAAE,MAAM;AACbwB,MAAAA,KAAK,CAAC,eAAD,CAAL;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAkBE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,GAAG,EAAEhD,MAAM,CAAC+C,EAFd;AAGE,IAAA,QAAQ,EAAE,IAAIhC,SAAS,CAACS,MAAd,CAAqB,UAArB,EAAiC,UAAjC,CAHZ;AAIE,IAAA,SAAS,EAAE;AAAG;AAJhB;AAKE,IAAA,OAAO,EAAE,MAAM;AACbwB,MAAAA,KAAK,CAAC,aAAD,CAAL;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,eA2BE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,GAAG,EAAEhD,MAAM,CAAC+C,EAFd;AAGE,IAAA,QAAQ,EAAE,IAAIhC,SAAS,CAACS,MAAd,CAAqB,UAArB,EAAiC,WAAjC,CAHZ;AAIE,IAAA,SAAS,EAAE;AAAG;AAJhB;AAKE,IAAA,OAAO,EAAE,MAAM;AACbwB,MAAAA,KAAK,CAAC,WAAD,CAAL;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,eAoCE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,GAAG,EAAEhD,MAAM,CAAC+C,EAFd;AAGE,IAAA,QAAQ,EAAE,IAAIhC,SAAS,CAACS,MAAd,CAAqB,UAArB,EAAiC,kBAAjC,CAHZ;AAIE,IAAA,SAAS,EAAE;AAAG;AAJhB;AAKE,IAAA,OAAO,EAAE,MAAM;AACbwB,MAAAA,KAAK,CAAC,UAAD,CAAL;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,CADF;AAgDD;AAED;;;;;;;AAKA,SAASX,WAAT,GAAuB;AACrB,MAAIY,SAAS,CAACC,WAAd,EAA2B;AACzB;AACAD,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACE,UAAUzB,QAAV,EAAoB;AAClBsB,MAAAA,KAAK,CAACtB,QAAQ,CAAC0B,MAAT,CAAgBC,QAAhB,GAA2B,GAA3B,GAAiC3B,QAAQ,CAAC0B,MAAT,CAAgBE,SAAlD,CAAL;AACA9C,MAAAA,OAAO,CAACC,GAAR,CACE,SACEiB,QAAQ,CAAC0B,MAAT,CAAgBC,QADlB,GAEE,GAFF,GAGE,MAHF,GAIE3B,QAAQ,CAAC0B,MAAT,CAAgBE,SALpB;AAMG;AACJ,KAVH,EAWE,UAAUC,KAAV,EAAiB;AACf;AACA/C,MAAAA,OAAO,CAAC+C,KAAR,CAAcA,KAAd;AACD,KAdH,EAeE;AACE;AACAC,MAAAA,kBAAkB,EAAE,IAFtB;AAE4B;AAC1BC,MAAAA,UAAU,EAAE,CAHd;AAGiB;AACfC,MAAAA,OAAO,EAAEC,QAJX,CAIqB;;AAJrB,KAfF;AAsBD,GAxBD,MAwBO;AACL;AACAX,IAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;AACF;;AAED,eAAe7C,GAAf","sourcesContent":["import React, {Component, Fragment} from \"react\";\r\nimport {NaverMap, Marker} from \"react-naver-maps\"; // 패키지 불러오기\r\nimport Search from \"../Components/Search\";\r\nimport \"./Map.css\";\r\nimport {findAllByPlaceholderText} from \"@testing-library/react\";\r\n\r\nclass Map extends React.Component {\r\n  // map = new naver.maps.Map('mapDiv', {option});\r\n  constructor(props) {\r\n    super(props);\r\n    const navermaps = window.naver.maps;\r\n\r\n    this.state = {\r\n      map: navermaps,\r\n      input_latlng: \"\",\r\n      zoomControl: true,\r\n      zoom: 2,\r\n      mapTypeId: \"normal\",\r\n      center: navermaps.LatLng(36.480058, 127.289039), // 126.9861108, 37.4983439 초기 지도 위치\r\n\r\n      zoomControlOptions: {\r\n        center: new navermaps.LatLng(36.480058, 127.289039), //36.4203004, 128.317960\r\n        position: navermaps.Position.TOP_LEFT,\r\n        style: navermaps.ZoomControlStyle.SMALL,\r\n      },\r\n\r\n      scaleControl: true,\r\n      draggable: true,\r\n      scrollWheel: true,\r\n    };\r\n  }\r\n  handleClick = (e) => {\r\n    console.log(\"e.coord >>>\", e.coord);\r\n    this.setState({\r\n      input_latlng: e.coord + \"\",\r\n    });\r\n  };\r\n\r\n  handleToZoomLevelOne = (e) => {\r\n    this.setState({\r\n      zoom: 10,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {place()}\r\n        {getLocation()}\r\n        {NaverMapAPI()}\r\n        <view>\r\n          <div>{<Search onCreate={this.handleCreate} />}</div>\r\n        </view>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction place(props) {\r\n  parentCallback =(dataFromChild)=>{\r\n    \r\n  }\r\n  return console.log(props.place);\r\n}\r\n\r\nplace.defaultProps = {\r\n  place: \"목적지 없음\",\r\n};\r\n\r\nfunction NaverMapAPI() {\r\n  const navermaps = window.naver.maps;\r\n  return (\r\n    <NaverMap\r\n      mapDivId={\"maps-getting-started-uncontrolled\"} // default: react-naver-map\r\n      style={{\r\n        width: \"100%\", // 네이버지도 가로 길이\r\n        height: \"922px\", // 네이버지도 세로 길이\r\n      }}\r\n      defaultCenter={{lat: 37.9036062, lng: 127.0385797}} // 지도 초기 위치\r\n      defaultZoom={13} // 지도 초기 확대 배율\r\n    >\r\n      <Marker\r\n        id=\"marker1\"\r\n        key={Marker.id}\r\n        position={new navermaps.LatLng(37.554722, 126.970833)}\r\n        animation={2} /* 마커 애니메이션설정 */\r\n        onClick={() => {\r\n          alert(\"여기는 N서울타워입니다.\");\r\n        }}\r\n      ></Marker>\r\n      <Marker\r\n        id=\"marker2\"\r\n        key={Marker.id}\r\n        position={new navermaps.LatLng(37.5939431, 127.075976)}\r\n        animation={0} /* 마커 애니메이션설정 (0.1.2)*/\r\n        onClick={() => {\r\n          alert(\"여기는 중랑역입니다.\");\r\n        }}\r\n      ></Marker>\r\n      <Marker\r\n        id=\"marker3\"\r\n        key={Marker.id}\r\n        position={new navermaps.LatLng(37.9036062, 127.0385797)}\r\n        animation={0} /* 마커 애니메이션설정 (0.1.2)*/\r\n        onClick={() => {\r\n          alert(\"신한대학교입니다.\");\r\n        }}\r\n      ></Marker>\r\n      <Marker\r\n        id=\"marker4\"\r\n        key={Marker.id}\r\n        position={new navermaps.LatLng(37.6505726, 127.05075719999999)}\r\n        animation={0} /* 마커 애니메이션설정 (0.1.2)*/\r\n        onClick={() => {\r\n          alert(\"영수오빠네입니다\");\r\n        }}\r\n      ></Marker>\r\n    </NaverMap>\r\n  );\r\n}\r\n\r\n/* gPS권한 허용/차단 \r\ngetCurrentPosition:현재위치 정보 가져옴\r\nlatitude:위도\r\nlongitude:경도 \r\n*/\r\nfunction getLocation() {\r\n  if (navigator.geolocation) {\r\n    // GPS를 지원하는 경우\r\n    navigator.geolocation.getCurrentPosition(\r\n      function (position) {\r\n        alert(position.coords.latitude + \" \" + position.coords.longitude);\r\n        console.log(\r\n          \"위도: \" +\r\n            position.coords.latitude +\r\n            \" \" +\r\n            \"경도: \" +\r\n            position.coords.longitude\r\n        ); /* 알림으로 나타냄 */\r\n      },\r\n      function (error) {\r\n        //위치값 찾기 에러났을때\r\n        console.error(error);\r\n      },\r\n      {\r\n        //옵션\r\n        enableHighAccuracy: true, //베터리를 소모해서 더 정확한 위치를 찾음\r\n        maximumAge: 0, //한번찾은 위치정보를 해당 초만큼 캐싱\r\n        timeout: Infinity, //주어진 초에 찾지못하면 에러발생\r\n      }\r\n    );\r\n  } else {\r\n    //GPS를 지원하지 않는 경우\r\n    alert(\"GPS를 지원하지 않습니다\");\r\n  }\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}