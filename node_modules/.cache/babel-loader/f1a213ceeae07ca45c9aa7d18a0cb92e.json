{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\minok\\\\lcs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\minok\\\\lcs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\minok\\\\lcs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\minok\\\\lcs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\minok\\\\lcs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from\"react\";import{NaverMap,Marker,RenderAfterNavermapsLoaded}from\"react-naver-maps\";// 패키지 불러오기\nimport Search from\"../Components/Search\";import\"./Map.css\";import{findAllByPlaceholderText,render}from\"@testing-library/react\";var Map=/*#__PURE__*/function(_React$Component){_inherits(Map,_React$Component);var _super=_createSuper(Map);// map = new naver.maps.Map('mapDiv', {option});\nfunction Map(props){var _this$state;var _this;_classCallCheck(this,Map);_this=_super.call(this,props);_this.handleClick=function(e){console.log(\"e.coord >>>\",e.coord);_this.setState({input_latlng:e.coord+\"\"});};_this.handleToZoomLevelOne=function(e){_this.setState({zoom:10});};var navermaps=window.naver.maps;_this.state=(_this$state={map:navermaps,input_latlng:\"\",zoomControl:true,zoom:2,mapTypeId:\"normal\",center:navermaps.LatLng(36.480058,127.289039),// 126.9861108, 37.4983439 초기 지도 위치\nzoomControlOptions:{center:new navermaps.LatLng(36.480058,127.289039),//36.4203004, 128.317960\nposition:navermaps.Position.TOP_LEFT,style:navermaps.ZoomControlStyle.SMALL},scaleControl:true,draggable:true,scrollWheel:true},_defineProperty(_this$state,\"scaleControl\",false),_defineProperty(_this$state,\"logoControl\",false),_defineProperty(_this$state,\"mapDataControl\",false),_defineProperty(_this$state,\"zoomControl\",true),_defineProperty(_this$state,\"minZoom\",6),_this$state);return _this;}_createClass(Map,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Fragment,null,place(),getLocation(),NaverMapAPI(),/*#__PURE__*/React.createElement(\"view\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Search,{onCreate:this.handleCreate}))));}}]);return Map;}(React.Component);function place(props){return console.log(\"안녕\");}place.defaultProps={place:\"목적지 없음\"};function NaverMapAPI(){var navermaps=window.naver.maps;return/*#__PURE__*/React.createElement(NaverMap,{mapDivId:\"maps-getting-started-uncontrolled\"// default: react-naver-map\n,style:{width:\"100%\",// 네이버지도 가로 길이\nheight:\"922px\"// 네이버지도 세로 길이\n},defaultCenter:{lat:37.9036062,lng:127.0385797}// 지도 초기 위치\n,defaultZoom:13// 지도 초기 확대 배율\n},/*#__PURE__*/React.createElement(Marker,{id:\"marker1\",key:Marker.id,position:new navermaps.LatLng(37.554722,126.970833),animation:2/* 마커 애니메이션설정 */,onClick:function onClick(){alert(\"여기는 N서울타워입니다.\");}}),/*#__PURE__*/React.createElement(Marker,{id:\"marker2\",key:Marker.id,position:new navermaps.LatLng(37.5939431,127.075976),animation:0/* 마커 애니메이션설정 (0.1.2)*/,onClick:function onClick(){alert(\"여기는 중랑역입니다.\");}}),/*#__PURE__*/React.createElement(Marker,{id:\"marker3\",key:Marker.id,position:new navermaps.LatLng(37.9036062,127.0385797),animation:0/* 마커 애니메이션설정 (0.1.2)*/,onClick:function onClick(){alert(\"신한대학교입니다.\");}}),/*#__PURE__*/React.createElement(Marker,{id:\"marker4\",key:Marker.id,position:new navermaps.LatLng(37.6505726,127.05075719999999),animation:0/* 마커 애니메이션설정 (0.1.2)*/,onClick:function onClick(){alert(\"영수오빠네입니다\");}}));}/* gPS권한 허용/차단 \r\ngetCurrentPosition:현재위치 정보 가져옴\r\nlatitude:위도\r\nlongitude:경도 \r\n*/function getLocation(){if(navigator.geolocation){// GPS를 지원하는 경우\nnavigator.geolocation.getCurrentPosition(function(position){alert(position.coords.latitude+\" \"+position.coords.longitude);console.log(\"위도: \"+position.coords.latitude+\" \"+\"경도: \"+position.coords.longitude);/* 알림으로 나타냄 */},function(error){//위치값 찾기 에러났을때\nconsole.error(error);},{//옵션\nenableHighAccuracy:true,//베터리를 소모해서 더 정확한 위치를 찾음\nmaximumAge:0,//한번찾은 위치정보를 해당 초만큼 캐싱\ntimeout:Infinity//주어진 초에 찾지못하면 에러발생\n});}else{//GPS를 지원하지 않는 경우\nalert(\"GPS를 지원하지 않습니다\");}}export default Map;","map":{"version":3,"sources":["C:/Users/minok/lcs/src/Map/Map.js"],"names":["React","Component","Fragment","NaverMap","Marker","RenderAfterNavermapsLoaded","Search","findAllByPlaceholderText","render","Map","props","handleClick","e","console","log","coord","setState","input_latlng","handleToZoomLevelOne","zoom","navermaps","window","naver","maps","state","map","zoomControl","mapTypeId","center","LatLng","zoomControlOptions","position","Position","TOP_LEFT","style","ZoomControlStyle","SMALL","scaleControl","draggable","scrollWheel","place","getLocation","NaverMapAPI","handleCreate","defaultProps","width","height","lat","lng","id","alert","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","error","enableHighAccuracy","maximumAge","timeout","Infinity"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from \"react\";\r\nimport {NaverMap, Marker, RenderAfterNavermapsLoaded} from \"react-naver-maps\"; // 패키지 불러오기\r\nimport Search from \"../Components/Search\";\r\nimport \"./Map.css\";\r\nimport {findAllByPlaceholderText, render} from \"@testing-library/react\";\r\n\r\nclass Map extends React.Component {\r\n  // map = new naver.maps.Map('mapDiv', {option});\r\n  constructor(props) {\r\n    super(props);\r\n    const navermaps = window.naver.maps;\r\n\r\n    this.state = {\r\n      map: navermaps,\r\n      input_latlng: \"\",\r\n      zoomControl: true,\r\n      zoom: 2,\r\n      mapTypeId: \"normal\",\r\n      center: navermaps.LatLng(36.480058, 127.289039), // 126.9861108, 37.4983439 초기 지도 위치\r\n\r\n      zoomControlOptions: {\r\n        center: new navermaps.LatLng(36.480058, 127.289039), //36.4203004, 128.317960\r\n        position: navermaps.Position.TOP_LEFT,\r\n        style: navermaps.ZoomControlStyle.SMALL,\r\n      },\r\n\r\n      scaleControl: true,\r\n      draggable: true,\r\n      scrollWheel: true,\r\n      scaleControl: false,\r\n      logoControl: false,\r\n      mapDataControl: false,\r\n      zoomControl: true,\r\n      minZoom: 6,\r\n    };\r\n  }\r\n  handleClick = (e) => {\r\n    console.log(\"e.coord >>>\", e.coord);\r\n    this.setState({\r\n      input_latlng: e.coord + \"\",\r\n    });\r\n  };\r\n\r\n  handleToZoomLevelOne = (e) => {\r\n    this.setState({\r\n      zoom: 10,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {place()}\r\n        {getLocation()}\r\n        {NaverMapAPI()}\r\n        <view>\r\n          <div>{<Search onCreate={this.handleCreate} />}</div>\r\n        </view>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction place(props) {\r\n  return console.log(\"안녕\");\r\n}\r\n\r\nplace.defaultProps = {\r\n  place: \"목적지 없음\",\r\n};\r\n\r\nfunction NaverMapAPI() {\r\n  const navermaps = window.naver.maps;\r\n  return (\r\n    <NaverMap\r\n      mapDivId={\"maps-getting-started-uncontrolled\"} // default: react-naver-map\r\n      style={{\r\n        width: \"100%\", // 네이버지도 가로 길이\r\n        height: \"922px\", // 네이버지도 세로 길이\r\n      }}\r\n      defaultCenter={{lat: 37.9036062, lng: 127.0385797}} // 지도 초기 위치\r\n      defaultZoom={13} // 지도 초기 확대 배율\r\n    >\r\n      <Marker\r\n        id=\"marker1\"\r\n        key={Marker.id}\r\n        position={new navermaps.LatLng(37.554722, 126.970833)}\r\n        animation={2} /* 마커 애니메이션설정 */\r\n        onClick={() => {\r\n          alert(\"여기는 N서울타워입니다.\");\r\n        }}\r\n      ></Marker>\r\n      <Marker\r\n        id=\"marker2\"\r\n        key={Marker.id}\r\n        position={new navermaps.LatLng(37.5939431, 127.075976)}\r\n        animation={0} /* 마커 애니메이션설정 (0.1.2)*/\r\n        onClick={() => {\r\n          alert(\"여기는 중랑역입니다.\");\r\n        }}\r\n      ></Marker>\r\n      <Marker\r\n        id=\"marker3\"\r\n        key={Marker.id}\r\n        position={new navermaps.LatLng(37.9036062, 127.0385797)}\r\n        animation={0} /* 마커 애니메이션설정 (0.1.2)*/\r\n        onClick={() => {\r\n          alert(\"신한대학교입니다.\");\r\n        }}\r\n      ></Marker>\r\n      <Marker\r\n        id=\"marker4\"\r\n        key={Marker.id}\r\n        position={new navermaps.LatLng(37.6505726, 127.05075719999999)}\r\n        animation={0} /* 마커 애니메이션설정 (0.1.2)*/\r\n        onClick={() => {\r\n          alert(\"영수오빠네입니다\");\r\n        }}\r\n      ></Marker>\r\n    </NaverMap>\r\n  );\r\n}\r\n\r\n/* gPS권한 허용/차단 \r\ngetCurrentPosition:현재위치 정보 가져옴\r\nlatitude:위도\r\nlongitude:경도 \r\n*/\r\nfunction getLocation() {\r\n  if (navigator.geolocation) {\r\n    // GPS를 지원하는 경우\r\n    navigator.geolocation.getCurrentPosition(\r\n      function (position) {\r\n        alert(position.coords.latitude + \" \" + position.coords.longitude);\r\n        console.log(\r\n          \"위도: \" +\r\n            position.coords.latitude +\r\n            \" \" +\r\n            \"경도: \" +\r\n            position.coords.longitude\r\n        ); /* 알림으로 나타냄 */\r\n      },\r\n      function (error) {\r\n        //위치값 찾기 에러났을때\r\n        console.error(error);\r\n      },\r\n      {\r\n        //옵션\r\n        enableHighAccuracy: true, //베터리를 소모해서 더 정확한 위치를 찾음\r\n        maximumAge: 0, //한번찾은 위치정보를 해당 초만큼 캐싱\r\n        timeout: Infinity, //주어진 초에 찾지못하면 에러발생\r\n      }\r\n    );\r\n  } else {\r\n    //GPS를 지원하지 않는 경우\r\n    alert(\"GPS를 지원하지 않습니다\");\r\n  }\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}