{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minok\\\\lcs\\\\src\\\\Map.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Route, Link, BrowserRouter as Router } from \"react-router-dom\";\n\nclass Map extends React.Component {\n  // map = new naver.maps.Map('mapDiv', {option});\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      console.log(\"e.coord >>>\", e.coord);\n      this.setState({\n        input_latlng: e.coord + \"\"\n      });\n    };\n\n    this.handleToZoomLevelOne = e => {\n      this.setState({\n        zoom: 10\n      });\n    };\n\n    const navermaps = window.naver.maps;\n    this.state = {\n      map: navermaps,\n      input_latlng: \"\",\n      zoomControl: true,\n      zoom: 2,\n      mapTypeId: \"normal\",\n      center: navermaps.LatLng(36.480058, 127.289039),\n      // 126.9861108, 37.4983439\n      zoomControlOptions: {\n        center: new navermaps.LatLng(36.480058, 127.289039),\n        //36.4203004, 128.317960\n        position: navermaps.Position.TOP_LEFT,\n        style: navermaps.ZoomControlStyle.SMALL\n      },\n      scaleControl: true,\n      draggable: true,\n      scrollWheel: true,\n      bounds: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, NaverMapAPI(), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NaverMap, {\n      id: \"p8lftt0b2s\",\n      style: {\n        width: \"100%\",\n        height: \"600px\",\n        top: \"40px\"\n      },\n      onClick: this.handleClick,\n      center: this.state.center,\n      bounds: this.state.bounds,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/minok/lcs/src/Map.js"],"names":["React","Route","Link","BrowserRouter","Router","Map","Component","constructor","props","handleClick","e","console","log","coord","setState","input_latlng","handleToZoomLevelOne","zoom","navermaps","window","naver","maps","state","map","zoomControl","mapTypeId","center","LatLng","zoomControlOptions","position","Position","TOP_LEFT","style","ZoomControlStyle","SMALL","scaleControl","draggable","scrollWheel","bounds","render","NaverMapAPI","width","height","top"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,aAAa,IAAIC,MAAtC,QAAmD,kBAAnD;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwBnBC,WAxBmB,GAwBJC,CAAD,IAAO;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,CAAC,CAACG,KAA7B;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAEL,CAAC,CAACG,KAAF,GAAU;AADZ,OAAd;AAGD,KA7BkB;;AAAA,SA+BnBG,oBA/BmB,GA+BKN,CAAD,IAAO;AAC5B,WAAKI,QAAL,CAAc;AACZG,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAnCkB;;AAEjB,UAAMC,SAAS,GAAGC,MAAM,CAACC,KAAP,CAAaC,IAA/B;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAEL,SADM;AAEXH,MAAAA,YAAY,EAAE,EAFH;AAGXS,MAAAA,WAAW,EAAE,IAHF;AAIXP,MAAAA,IAAI,EAAE,CAJK;AAKXQ,MAAAA,SAAS,EAAE,QALA;AAMXC,MAAAA,MAAM,EAAER,SAAS,CAACS,MAAV,CAAiB,SAAjB,EAA4B,UAA5B,CANG;AAMsC;AAEjDC,MAAAA,kBAAkB,EAAE;AAClBF,QAAAA,MAAM,EAAE,IAAIR,SAAS,CAACS,MAAd,CAAqB,SAArB,EAAgC,UAAhC,CADU;AACmC;AACrDE,QAAAA,QAAQ,EAAEX,SAAS,CAACY,QAAV,CAAmBC,QAFX;AAGlBC,QAAAA,KAAK,EAAEd,SAAS,CAACe,gBAAV,CAA2BC;AAHhB,OART;AAcXC,MAAAA,YAAY,EAAE,IAdH;AAeXC,MAAAA,SAAS,EAAE,IAfA;AAgBXC,MAAAA,WAAW,EAAE,IAhBF;AAiBXC,MAAAA,MAAM,EAAE;AAjBG,KAAb;AAmBD;;AAcDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,WAAW,EADd,eAEE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,MAAM,EAAE,OAAxB;AAAiCC,QAAAA,GAAG,EAAE;AAAtC,OAFT;AAGE,MAAA,OAAO,EAAE,KAAKlC,WAHhB;AAIE,MAAA,MAAM,EAAE,KAAKa,KAAL,CAAWI,MAJrB;AAKE,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWgB,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF;AAcD;;AAtD+B","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport {Route, Link, BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nclass Map extends React.Component {\r\n  // map = new naver.maps.Map('mapDiv', {option});\r\n  constructor(props) {\r\n    super(props);\r\n    const navermaps = window.naver.maps;\r\n\r\n    this.state = {\r\n      map: navermaps,\r\n      input_latlng: \"\",\r\n      zoomControl: true,\r\n      zoom: 2,\r\n      mapTypeId: \"normal\",\r\n      center: navermaps.LatLng(36.480058, 127.289039), // 126.9861108, 37.4983439\r\n\r\n      zoomControlOptions: {\r\n        center: new navermaps.LatLng(36.480058, 127.289039), //36.4203004, 128.317960\r\n        position: navermaps.Position.TOP_LEFT,\r\n        style: navermaps.ZoomControlStyle.SMALL,\r\n      },\r\n\r\n      scaleControl: true,\r\n      draggable: true,\r\n      scrollWheel: true,\r\n      bounds: null,\r\n    };\r\n  }\r\n  handleClick = (e) => {\r\n    console.log(\"e.coord >>>\", e.coord);\r\n    this.setState({\r\n      input_latlng: e.coord + \"\",\r\n    });\r\n  };\r\n\r\n  handleToZoomLevelOne = (e) => {\r\n    this.setState({\r\n      zoom: 10,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {NaverMapAPI()}\r\n        <div style={{width: \"100%\"}}>\r\n          <NaverMap\r\n            id=\"p8lftt0b2s\"\r\n            style={{width: \"100%\", height: \"600px\", top: \"40px\"}}\r\n            onClick={this.handleClick}\r\n            center={this.state.center}\r\n            bounds={this.state.bounds}\r\n          ></NaverMap>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}