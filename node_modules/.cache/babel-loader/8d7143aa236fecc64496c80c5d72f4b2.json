{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minok\\\\lcs\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { RenderAfterNavermapsLoaded, NaverMap } from \"react-naver-maps\"; // 패키지 불러오기\n\nimport { Route, Link, Router } from \"react-router-dom\";\nimport Map from \"C:/Users/minok/lcs/src/Map.js\";\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }, \" \\uCE74 \\uACE0\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, \"\\uC8FC\\uBCC0\\uCE74\\uD398 \\uC790\\uB9AC\\uB97C \\uD655\\uC778\\uD574\\uBCF4\\uC138\\uC694~\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      //검색 바\n      id: \"seearch\",\n      type: \"search\",\n      placeholder: \"\\uBAA9\\uC801\\uC9C0\\uB97C \\uAC80\\uC0C9\\uD558\\uC138\\uC694\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"searchBton\",\n      type: \"submit\",\n      value: \"\\uAC80\\uC0C9\",\n      onClick: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"App-Btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"App-link\",\n      href: \"#\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"./map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, \"\\uD604\\uC7AC \\uC704\\uCE58\\uB85C \\uD655\\uC778\"), /*#__PURE__*/React.createElement(Route, {\n      path: \"./map\",\n      exact: true,\n      component: Map,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    })), getLocation());\n  }\n\n}\n/* gPS권한 허용/차단 \ngetCurrentPosition:현재위치 정보 가져옴\nlatitude:위도\nlongitude:경도 \n*/\n\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n    // GPS를 지원하는 경우\n    navigator.geolocation.getCurrentPosition(function (position) {\n      alert(position.coords.latitude + \" \" + position.coords.longitude);\n    }, function (error) {\n      //위치값 찾기 에러났을때\n      console.error(error);\n    }, {\n      //옵션\n      enableHighAccuracy: false,\n      //베터리를 소모해서 더 정확한 위치를 찾음\n      maximumAge: 0,\n      //한번찾은 위치정보를 해당 초만큼 캐싱\n      timeout: Infinity //주어진 초에 찾지못하면 에러발생\n\n    });\n  } else {\n    //GPS를 지원하지 않는 경우\n    alert(\"GPS를 지원하지 않습니다\");\n  }\n}\n/*\nfunction currentLocationBtn() {\n  //링크가 눌러졌을때 map.js로 페이지 이동과 함께 현재위치 표시\n   if (App-Btn.onClick ) {\n   <Route path=\"/\" exact={true} component={Map}></Route>\n  }\n}\n*/\n\n/*class searchBar extends React.Component {\n  //검색바에서 목적지를 검색햇을때 그 목적지를 지도에 나타내줌\n  render() {\n    return <div></div>;\n  }\n}\n*/\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/minok/lcs/src/App.js"],"names":["React","RenderAfterNavermapsLoaded","NaverMap","Route","Link","Router","Map","App","Component","render","handleChange","getLocation","navigator","geolocation","getCurrentPosition","position","alert","coords","latitude","longitude","error","console","enableHighAccuracy","maximumAge","timeout","Infinity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,0BAAR,EAAoCC,QAApC,QAAmD,kBAAnD,C,CAAuE;;AACvE,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,MAArB,QAAkC,kBAAlC;AACA,OAAOC,GAAP,MAAgB,+BAAhB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAFF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO;AACL,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,WAAW,EAAC,yDAHd;AAIE,MAAA,QAAQ,EAAE,KAAKC,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAO,MAAA,EAAE,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC,QAA5B;AAAqC,MAAA,KAAK,EAAC,cAA3C;AAAgD,MAAA,OAAO,EAAC,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CANF,eAiBE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,IAAI,EAAC,GAFP;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAPF,eAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAE,IAA3B;AAAiC,MAAA,SAAS,EAAEJ,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAjBF,EA4BGK,WAAW,EA5Bd,CADF;AAgCD;;AAlC+B;AAqClC;;;;;;;AAKA,SAASA,WAAT,GAAuB;AACrB,MAAIC,SAAS,CAACC,WAAd,EAA2B;AACzB;AACAD,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACE,UAAUC,QAAV,EAAoB;AAClBC,MAAAA,KAAK,CAACD,QAAQ,CAACE,MAAT,CAAgBC,QAAhB,GAA2B,GAA3B,GAAiCH,QAAQ,CAACE,MAAT,CAAgBE,SAAlD,CAAL;AACD,KAHH,EAIE,UAAUC,KAAV,EAAiB;AACf;AACAC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAPH,EAQE;AACE;AACAE,MAAAA,kBAAkB,EAAE,KAFtB;AAE6B;AAC3BC,MAAAA,UAAU,EAAE,CAHd;AAGiB;AACfC,MAAAA,OAAO,EAAEC,QAJX,CAIqB;;AAJrB,KARF;AAeD,GAjBD,MAiBO;AACL;AACAT,IAAAA,KAAK,CAAC,gBAAD,CAAL;AACD;AACF;AAED;;;;;;;;;AASA;;;;;;;;;AAOA,eAAeT,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport {RenderAfterNavermapsLoaded, NaverMap} from \"react-naver-maps\"; // 패키지 불러오기\nimport {Route, Link, Router} from \"react-router-dom\";\nimport Map from \"C:/Users/minok/lcs/src/Map.js\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <h1> 카 고</h1>\n          <h6>주변카페 자리를 확인해보세요~</h6>\n        </div>\n\n        <div>\n          <input //검색 바\n            id=\"seearch\"\n            type=\"search\"\n            placeholder=\"목적지를 검색하세요\"\n            onChange={this.handleChange}\n          ></input>\n\n          <input id=\"searchBton\" type=\"submit\" value=\"검색\" onClick=\"\"></input>\n        </div>\n\n        <div id=\"App-Btn\">\n          <a\n            className=\"App-link\"\n            href=\"#\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          ></a>\n          <Link to=\"./map\">현재 위치로 확인</Link>\n          <Route path=\"./map\" exact={true} component={Map}></Route>\n        </div>\n\n        {getLocation()}\n      </div>\n    );\n  }\n}\n\n/* gPS권한 허용/차단 \ngetCurrentPosition:현재위치 정보 가져옴\nlatitude:위도\nlongitude:경도 \n*/\nfunction getLocation() {\n  if (navigator.geolocation) {\n    // GPS를 지원하는 경우\n    navigator.geolocation.getCurrentPosition(\n      function (position) {\n        alert(position.coords.latitude + \" \" + position.coords.longitude);\n      },\n      function (error) {\n        //위치값 찾기 에러났을때\n        console.error(error);\n      },\n      {\n        //옵션\n        enableHighAccuracy: false, //베터리를 소모해서 더 정확한 위치를 찾음\n        maximumAge: 0, //한번찾은 위치정보를 해당 초만큼 캐싱\n        timeout: Infinity, //주어진 초에 찾지못하면 에러발생\n      }\n    );\n  } else {\n    //GPS를 지원하지 않는 경우\n    alert(\"GPS를 지원하지 않습니다\");\n  }\n}\n\n/*\nfunction currentLocationBtn() {\n  //링크가 눌러졌을때 map.js로 페이지 이동과 함께 현재위치 표시\n   if (App-Btn.onClick ) {\n   <Route path=\"/\" exact={true} component={Map}></Route>\n  }\n}\n*/\n\n/*class searchBar extends React.Component {\n  //검색바에서 목적지를 검색햇을때 그 목적지를 지도에 나타내줌\n  render() {\n    return <div></div>;\n  }\n}\n*/\nexport default App;\n"]},"metadata":{},"sourceType":"module"}